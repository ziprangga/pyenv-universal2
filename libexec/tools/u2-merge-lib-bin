#!/usr/bin/env bash

merge_binary_or_lib() {
    local arm_binary="$1"
    local x86_binary="$2"
    local merged_binary="$3"

    lipo -create "$arm_binary" "$x86_binary" -output "$merged_binary"
    if [[ $? -eq 0 ]]; then
        log "INFO" "Successfully merged $arm_binary and $x86_binary into $merged_binary"
    else
        log "ERROR" "Failed to merge binaries: $arm_binary and $x86_binary"
        return 1
    fi
}

merge_ext_lib(){
    local x86_lib_folder="$1"
    local arm_lib_folder="$2"
    local target_lib_path="$3"

    local merged_count=0
    mkdir -p "$target_lib_path"

    shopt -s nullglob
    for arm_binary in "$arm_lib_folder"/*.dylib; do
        [[ -f "$arm_binary" ]] || continue
        local base_name
        base_name=$(basename "$arm_binary")
        local x86_binary="$x86_lib_folder/$base_name"
        local merged_file="$target_lib_path/$base_name"

        log "INFO" "Merged $arm_binary with $x86_binary into $merged_file"
        merge_binary_or_lib "$arm_binary" "$x86_binary" "$merged_file"
        if [[ $? -eq 0 ]]; then
            ((merged_count++))
        fi
    done
    for arm_link in "$arm_lib_folder"/*; do
        [[ -L "$arm_link" ]] || continue
        local link_name
        link_name=$(basename "$arm_link")
        local target_name
        target_name=$(readlink "$arm_link")

        # Ensure symlink target exists in merged folder
        if [[ -f "$target_lib_path/$(basename "$target_name")" ]]; then
            ln -sf "$(basename "$target_name")" "$target_lib_path/$link_name"
            log "INFO" "Created symlink in merged lib: $link_name -> $(basename "$target_name")"
        else
            log "WARN" "Symlink target $target_name not found for $link_name"
        fi
    done
    shopt -s nullglob
}

merge_int_bin_lib() {
    local x86_binary="$1"
    local arm_binary="$2"
    local merged_binary="$3"

    log "INFO" "Merging $arm_binary and $x86_binary into $merged_binary"

    if [[ ! -f "$arm_binary" || ! -f "$x86_binary" ]]; then
        log "ERROR" "One or both binaries are missing, cannot merge."
        return 1
    fi

    merge_binary_or_lib "$arm_binary" "$x86_binary" "$merged_binary"

    local dir_path
    dir_path=$(dirname "$merged_binary")

    # Look for symlinks in the directories of the arm and x86 binaries
    for lib in "$arm_binary" "$x86_binary"; do
        local lib_dir
        lib_dir=$(dirname "$lib")

        for link in "$lib_dir"/*; do
            if [[ -L "$link" ]]; then
                local link_name
                link_name=$(basename "$link")
                local target_name
                target_name=$(readlink "$link")

                # Check if the symlink's target matches the original binary (arm or x86)
                if [[ "$target_name" == "$lib" ]]; then
                    ln -sf "$merged_binary" "$dir_path/$link_name"
                    log "INFO" "Created symlink for merged binary: $link_name -> $merged_binary"
                fi
            fi
        done
    done
}

