#!/usr/bin/env bash

# Function to test the Python binary for a given architecture
test_binary_for_arch() {
    local python_path="$1"
    local arch="$2"

    color_echo "DEBUG" "Testing the Python binary for architecture $arch and version $python_version..."

    if [[ $DRY_RUN = true ]]; then
            log "INFO" "Dry run mode, skipped"
    else
        if arch -$arch "${python_path}/bin/python" --version; then
            log "INFO" "$arch binary test passed successfully."
            return 0
        else
            log "WARN" "Warning: $arch binary test failed."
            return 1
        fi
    fi
}

# Function to test both ARM64 and x86_64 binaries
test_binary_fat() {
    local python_path="$1"

    color_echo "DEBUG" "Testing the fat binary for Python $python_version..."

    # Test both architectures and track failures
    if [[ $DRY_RUN = true ]]; then
        log "INFO" "Dry run mode, skipped"
    else
        test_binary_for_arch "$python_path" "arm64" || arm_test_failed=true
        test_binary_for_arch "$python_path" "x86_64" || x86_test_failed=true
    fi

    # Evaluate the results
    if [[ -z "$arm_test_failed" && -z "$x86_test_failed" ]]; then
        log "INFO" "fat binary tests passed successfully."
        return 0
    else
        log "ERROR" "Error: One or both architecture tests failed."
        return 1
    fi
}

# Function to test Python binaries with conditional logic
test_binary_conditional() {
    local python_path="$1"

    # Initialize failure flags for both architectures
    local arm_test_failed
    local x86_test_failed

    # Test ARM64 and x86_64 architectures
    if [[ $DRY_RUN = true ]]; then
        log "INFO" "Dry run mode, skipped"
    else
        test_binary_for_arch "$python_path" "arm64" || arm_test_failed=true
        test_binary_for_arch "$python_path" "x86_64" || x86_test_failed=true
        # Determine if both tests passed
        if [[ -z "$arm_test_failed" && -z "$x86_test_failed" ]]; then
            log "INFO" "Success: Both ARM64 and x86_64 binary tests passed."
        elif [[ -z "$arm_test_failed" || -z "$x86_test_failed" ]]; then
            log "INFO" "Success: At least one binary test passed."
        else
            log "WARN" "Error: Both ARM64 and x86_64 binary tests failed."
            return 1
        fi
    fi
    return 0
}
